# -*- coding: utf-8 -*-
"""Recognizer.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1sa6BSajboUufQSLoJUDxoHNDXFokjzJo
"""

import os
import cv2
import numpy as np
from PIL import Image

facedetect=cv2.CascadeClassifier('haarcascade_frontalface_default.xml');
cam=cv2.VideoCapture(0);

rec=cv2.createLBPHFaceRecognizer();

rec.load('give the\\ trainingdata.yml')


id=0
font=cv2.cv.InitFont(cv2.cv.CV_FONT_HERSHEY,COMPLEX_SMALL,5,1,0,4)

while (True):
  ret,img=cam.read()  #returns the status and an image 
  #but it has to be converted into a gray scale image which harcascade suits 
  gray=cv2.cvtColor(img,cv2.COLOR_BGR2GRAY)
  faces=facedetect.detectMultiScale(gray,1.3,5) #some optimal value 
  for (x,y,w,h) in faces:
    cv2.rectangle(img,(x,y),(x+w,y+h),(0,0,255),2) # recatngle will be made on a colour image
    id,conf=rec.predict(gray[y:y+h,x:x+w])
    if id==1:
      id="ajay"
    cv2.cv.putText(cv2.cv.fromarray(img),str(id),(x,y+h),font,255);
  cv2.imshow("Face",img);  

  if (cv2.waitKey(1)==ord('q')):
    break;
cam.release()
cv2.destroyAllWindows()